syntax = "proto3";

option go_package = "github.com/cwww3/grpc_demo/route";

package route;

import "google/api/annotations.proto";

message Point {
  int32 x = 1;
  int32 y = 2;
}

message Rectangle {
  Point hi = 1;
  Point lo = 2;
}

message Feature {
  string name = 1;
  Point location = 2;
}

message RouteSummary {
  int32 point_count = 1;
  int32 distance = 2;
  int32 elapsed_time = 3;
}

enum RecommendationMode {
  GetFarthest = 0;
  GetNearest = 1;
}

message RecommendationRequest {
  RecommendationMode mode = 1;
  Point point = 2;
}

service RouteGuide {
  // unary
  rpc GetFeature(Point) returns(Feature) {
    option (google.api.http) = {
      post: "/get-feature"
      body: "*"
    };
  }

  // server side streaming
  rpc ListFeatures(Rectangle) returns(stream Feature) {
    option (google.api.http) = {
      post: "/list-feature"
      body: "*"
    };
  }

  // client side streaming
  rpc RecordRoute(stream Point) returns(RouteSummary) {
    option (google.api.http) = {
      post: "/record-route"
      body: "*"
    };
  }

  // bidirectional streaming
  rpc Recommend(stream RecommendationRequest) returns(stream Feature) {
    option (google.api.http) = {
      post: "/recommend"
      body: "*"
    };
  }
}


